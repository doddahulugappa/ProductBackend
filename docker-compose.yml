version: "3.8"

services:

  redis:
    image: 'bitnami/redis:latest'
    container_name: redis_container
    restart: unless-stopped
    env_file:
      - .env

  db:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    env_file:
      - .env
    container_name: db_container
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile

    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - .:/app/

    working_dir: "/app/product_api"
    image: product_api
    container_name: api_container
    expose:
      - 80
    ports:
      - "80:80"
    command: python manage.py runserver 0.0.0.0:80 --insecure
    depends_on:
      - db
      - redis
  celery_worker:
    restart: always
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    image: celeryworker
    command: celery -A backend worker --loglevel=info --concurrency 1 -E
    container_name: celery_container
    volumes:
      - .:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    image: celerybeat
    container_name: celerybeat_container
    command: celery -A backend beat --loglevel=info --scheduler=django_celery_beat.schedulers.DatabaseScheduler

    volumes:
      - .:/app/
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  mysql_data: